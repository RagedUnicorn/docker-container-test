name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Container Structure Test image
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: ragedunicorn/container-test:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.repository.updated_at }}
            VERSION=test

      - name: Run File Structure Tests
        id: file-tests
        continue-on-error: true
        run: |
          echo "::group::üìÅ File Structure Tests"
          CONTAINER_STRUCTURE_TEST_VERSION=test docker compose -f docker-compose.test.yml up --exit-code-from container-test container-test 2>&1 | tee test-file-structure.log
          echo "::endgroup::"

      - name: Run Command Execution Tests
        id: command-tests
        continue-on-error: true
        run: |
          echo "::group::üîß Command Execution Tests"
          CONTAINER_STRUCTURE_TEST_VERSION=test docker compose -f docker-compose.test.yml up --exit-code-from container-test-command container-test-command 2>&1 | tee test-command-execution.log
          echo "::endgroup::"

      - name: Run Metadata Tests
        id: metadata-tests
        continue-on-error: true
        run: |
          echo "::group::üè∑Ô∏è Metadata Tests"
          CONTAINER_STRUCTURE_TEST_VERSION=test docker compose -f docker-compose.test.yml up --exit-code-from container-test-metadata container-test-metadata 2>&1 | tee test-metadata.log
          echo "::endgroup::"

      - name: Test basic Container Structure Test functionality
        id: basic-tests
        continue-on-error: true
        run: |
          echo "::group::üß™ Basic Container Structure Test Functionality"
          {
            echo "Testing Container Structure Test version..."
            docker run --rm --entrypoint container-structure-test ragedunicorn/container-test:test version
            echo ""
            echo "Testing with a real-world image (nginx:alpine)..."
            docker run --rm \
              -v /var/run/docker.sock:/var/run/docker.sock \
              ragedunicorn/container-test:test \
              --pull --image nginx:alpine --config - << 'EOF'
          schemaVersion: 2.0.0
          commandTests:
            - name: "nginx version"
              command: "nginx"
              args: ["-v"]
              exitCode: 0
          EOF
          } 2>&1 | tee test-basic-functionality.log
          echo "::endgroup::"

      - name: Generate Test Summary
        if: always()
        run: |
          echo "## üìä Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.file-tests.outcome }}" == "success" ]; then
            echo "| üìÅ File Structure | ‚úÖ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| üìÅ File Structure | ‚ùå Failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.command-tests.outcome }}" == "success" ]; then
            echo "| üîß Command Execution | ‚úÖ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| üîß Command Execution | ‚ùå Failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.metadata-tests.outcome }}" == "success" ]; then
            echo "| üè∑Ô∏è Metadata | ‚úÖ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| üè∑Ô∏è Metadata | ‚ùå Failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.basic-tests.outcome }}" == "success" ]; then
            echo "| üß™ Basic Functionality | ‚úÖ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| üß™ Basic Functionality | ‚ùå Failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Overall status
          if [ "${{ steps.file-tests.outcome }}" == "success" ] && \
             [ "${{ steps.command-tests.outcome }}" == "success" ] && \
             [ "${{ steps.metadata-tests.outcome }}" == "success" ] && \
             [ "${{ steps.basic-tests.outcome }}" == "success" ]; then
            echo "### ‚úÖ All tests passed successfully!" >> $GITHUB_STEP_SUMMARY
            echo "::notice title=‚úÖ All Tests Passed::Container Structure Test image is working correctly!"
          else
            echo "### ‚ùå Some tests failed. Check the logs for details." >> $GITHUB_STEP_SUMMARY
            echo "::error title=‚ùå Test Failures::One or more test suites failed. Check the workflow logs for details."
            exit 1
          fi
          
      - name: Upload test logs
        if: always() && (steps.file-tests.outcome == 'failure' || steps.command-tests.outcome == 'failure' || steps.metadata-tests.outcome == 'failure' || steps.basic-tests.outcome == 'failure')
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            test-file-structure.log
            test-command-execution.log
            test-metadata.log
            test-basic-functionality.log
          retention-days: 7